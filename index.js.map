{"version":3,"file":"index.js","mappings":"mBAkHA,QAhHA,MACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAEA,WAAAA,CAAYC,EAAmBC,EAAW,KACxCC,MAAK,EAAqBF,EAC1BE,MAAK,EAAmBC,UAAUC,IAAI,sBACtCF,MAAK,EAAYD,EACjBC,MAAK,EAAmB,EACxBA,MAAK,EAAUA,MAAK,EAAmBG,iBAAiB,OACxDH,MAAK,IACLA,MAAK,GACP,CAEA,KACEA,MAAK,EAAcI,SAASC,cAAc,OAC1CL,MAAK,EAAYC,UAAUC,IAAI,eAC/BF,MAAK,EAAmBM,OAAON,MAAK,GACpCA,MAAK,IACLA,MAAK,IACLA,MAAK,GACP,CAEA,KACEA,MAAK,EAAQO,SAASC,IACpBA,EAAIC,SAEJT,MAAK,EAAYM,OAAOE,EAAI,GAEhC,CAEA,KACER,MAAK,EAAc,GAEnB,IAAIU,EAAgBN,SAASC,cAAc,OAC3CK,EAAcT,UAAUC,IAAI,cAC5B,IAAK,IAAIS,EAAI,EAAGA,EAAIX,MAAK,EAAQY,OAAQD,IAAK,CAC5C,IAAIE,EAAYT,SAASC,cAAc,OACvCQ,EAAUZ,UAAUC,IAAI,aACpBS,IAAMX,MAAK,GACba,EAAUZ,UAAUC,IAAI,UAE1BW,EAAUC,iBAAiB,SAAS,IAAMd,KAAKe,gBAAgBJ,KAC/DD,EAAcJ,OAAOO,GACrBb,MAAK,EAAYgB,KAAKH,EACxB,CACAb,MAAK,EAAmBM,OAAOI,EACjC,CAEA,KACE,MAAMO,EAAcb,SAASC,cAAc,OAC3CY,EAAYhB,UAAUC,IAAI,YAC1BF,MAAK,EAAaI,SAASC,cAAc,OACzCL,MAAK,EAAWC,UAAUC,IAAI,cAC9Be,EAAYX,OAAON,MAAK,GACxBA,MAAK,EAAcI,SAASC,cAAc,OAC1CL,MAAK,EAAYC,UAAUC,IAAI,eAC/Be,EAAYX,OAAON,MAAK,GACxBA,MAAK,EAAmBM,OAAOW,GAC/BjB,MAAK,GACP,CAEA,KACEA,MAAK,EAAWc,iBAAiB,SAAS,IAAMd,KAAKkB,YACrDlB,MAAK,EAAYc,iBAAiB,SAAS,IAAMd,KAAKmB,WACxD,CAEA,eAAAJ,CAAgBK,GAEYpB,MAAK,EAAYA,MAAK,GAC9BC,UAAUoB,OAAO,UAEnCrB,MAAK,EAAmBoB,EACNpB,MAAK,EAAYA,MAAK,GAE9BC,UAAUoB,OAAO,UAE3B,IAAIC,EAAStB,MAAK,EAAmBA,MAAK,EAAmBuB,YAC7DvB,MAAK,EAAYwB,MAAMC,KAAO,IAAIH,MAElCtB,MAAK,GACP,CAEA,OAAAmB,GACE,IAAIO,EAAc1B,MAAK,EAAmB,EAC1C0B,GAAe1B,MAAK,EAAQY,OAC5BZ,KAAKe,gBAAgBW,EACvB,CAEA,OAAAR,GACE,IAAIQ,EAAc1B,MAAK,EAAmB,EACtC0B,EAAc,IAAGA,EAAc1B,MAAK,EAAQY,OAAS,GACzDZ,KAAKe,gBAAgBW,EACvB,CAEA,KACM1B,MAAK,IACP2B,aAAa3B,MAAK,GAClBA,MAAK,EAAc,MAGrBA,MAAK,EAAc4B,aAAY,IAAM5B,KAAKmB,WAAWnB,MAAK,EAC5D,GC3GF,IAAI,EAASI,SAASyB,cAAc,eACpC,IAAI,EAASzB,SAASyB,cAAc,cAAe,I","sources":["webpack://js-repo-template/./src/carousel/index.js","webpack://js-repo-template/./src/index.js"],"sourcesContent":["import \"./styles.css\"\n\nclass Carousel {\n  #carouselContainer;\n  #imgWrapper;\n  #currentImgIndex;\n  #images;\n  #indicators;\n  #interval;\n  #intervalID;\n  #leftArrow;\n  #rightArrow;\n\n  constructor(carouselContainer, interval = 2000) {\n    this.#carouselContainer = carouselContainer;\n    this.#carouselContainer.classList.add(\"carousel-container\");\n    this.#interval = interval;\n    this.#currentImgIndex = 0;\n    this.#images = this.#carouselContainer.querySelectorAll(\"img\");\n    this.#createCarousel();\n    this.#initializeInterval();\n  }\n\n  #createCarousel() {\n    this.#imgWrapper = document.createElement(\"div\");\n    this.#imgWrapper.classList.add(\"img-wrapper\");\n    this.#carouselContainer.append(this.#imgWrapper);\n    this.#createSlides();\n    this.#createIndicators();\n    this.#createControls();\n  }\n\n  #createSlides() {\n    this.#images.forEach((img) => {\n      img.remove();\n      // img.width = this.#carouselContainer.offsetWidth;\n      this.#imgWrapper.append(img);\n    });\n  }\n\n  #createIndicators() {\n    this.#indicators = [];\n\n    let indicatorsDiv = document.createElement(\"div\");\n    indicatorsDiv.classList.add(\"indicators\");\n    for (let i = 0; i < this.#images.length; i++) {\n      let indicator = document.createElement(\"div\");\n      indicator.classList.add(\"indicator\");\n      if (i === this.#currentImgIndex) {\n        indicator.classList.add(\"active\");\n      }\n      indicator.addEventListener(\"click\", () => this.setImageByIndex(i));\n      indicatorsDiv.append(indicator);\n      this.#indicators.push(indicator);\n    }\n    this.#carouselContainer.append(indicatorsDiv);\n  }\n\n  #createControls() {\n    const controlsDiv = document.createElement(\"div\");\n    controlsDiv.classList.add(\"controls\");\n    this.#leftArrow = document.createElement(\"div\");\n    this.#leftArrow.classList.add(\"left-arrow\");\n    controlsDiv.append(this.#leftArrow);\n    this.#rightArrow = document.createElement(\"div\");\n    this.#rightArrow.classList.add(\"right-arrow\");\n    controlsDiv.append(this.#rightArrow);\n    this.#carouselContainer.append(controlsDiv);\n    this.#addControlHandlers();\n  }\n\n  #addControlHandlers() {\n    this.#leftArrow.addEventListener(\"click\", () => this.prevImg());\n    this.#rightArrow.addEventListener(\"click\", () => this.nextImg());\n  }\n\n  setImageByIndex(imgIndex) {\n    // Deactivate current indicator\n    const previousIndicator = this.#indicators[this.#currentImgIndex];\n    previousIndicator.classList.toggle(\"active\");\n\n    this.#currentImgIndex = imgIndex;\n    const indicator = this.#indicators[this.#currentImgIndex];\n    // Activate new indicator\n    indicator.classList.toggle(\"active\");\n    // Set offset for current image\n    let offset = this.#currentImgIndex * this.#carouselContainer.offsetWidth;\n    this.#imgWrapper.style.left = `-${offset}px`;\n    // Reset interval\n    this.#initializeInterval();\n  }\n\n  nextImg() {\n    let newImgIndex = this.#currentImgIndex + 1;\n    newImgIndex %= this.#images.length;\n    this.setImageByIndex(newImgIndex);\n  }\n\n  prevImg() {\n    let newImgIndex = this.#currentImgIndex - 1;\n    if (newImgIndex < 0) newImgIndex = this.#images.length - 1;\n    this.setImageByIndex(newImgIndex);\n  }\n\n  #initializeInterval() {\n    if (this.#intervalID) {\n      clearTimeout(this.#intervalID);\n      this.#intervalID = null;\n    }\n\n    this.#intervalID = setInterval(() => this.nextImg(), this.#interval);\n  }\n}\n\nexport default Carousel;","import \"modern-normalize\";\nimport \"./css/styles.css\";\nimport Carousel from \"./carousel/index.js\"\n\nnew Carousel(document.querySelector(\"#carousel1\"));\nnew Carousel(document.querySelector(\"#carousel2\"), 3000);\n"],"names":["constructor","carouselContainer","interval","this","classList","add","querySelectorAll","document","createElement","append","forEach","img","remove","indicatorsDiv","i","length","indicator","addEventListener","setImageByIndex","push","controlsDiv","prevImg","nextImg","imgIndex","toggle","offset","offsetWidth","style","left","newImgIndex","clearTimeout","setInterval","querySelector"],"sourceRoot":""}